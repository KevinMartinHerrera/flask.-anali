
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA DIVIDE DOT ELSE EQUALS EQUAL_EQUAL FLOAT FOR GREATER_THAN GREATER_THAN_EQUAL ID IF INCREMENT INT LEFT_BRACE LEFT_BRACKET LESS_THAN LESS_THAN_EQUAL LPAREN MINUS NOT_EQUAL NUMBER OUT PLUS PRINTLN RIGHT_BRACE RIGHT_BRACKET RPAREN SEMICOLON STRING SYSTEM TIMES WHILE\n    program : statements\n    \n    statements : statement\n               | statements statement\n    \n    statement : expression SEMICOLON\n              | for_loop\n              | println_statement\n    \n    for_loop : FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LEFT_BRACE statements RIGHT_BRACE\n    \n    println_statement : SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON\n    \n    assignment : ID EQUALS expression\n    \n    condition : expression\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression TIMES expression\n               | expression DIVIDE expression\n               | LPAREN expression RPAREN\n               | ID\n               | NUMBER\n               | INCREMENT\n               | STRING\n               | expression LESS_THAN expression\n               | expression GREATER_THAN expression\n               | expression LESS_THAN_EQUAL expression\n               | expression GREATER_THAN_EQUAL expression\n               | expression EQUAL_EQUAL expression\n               | expression NOT_EQUAL expression\n    \n    increment : ID INCREMENT\n    '
    
_lr_action_items = {'LPAREN':([0,2,3,5,6,7,12,14,15,16,17,18,19,20,21,22,23,24,25,43,44,49,51,58,59,60,61,],[7,7,-2,-5,-6,7,27,-3,-4,7,7,7,7,7,7,7,7,7,7,7,7,51,7,7,-8,7,-7,]),'ID':([0,2,3,5,6,7,14,15,16,17,18,19,20,21,22,23,24,25,27,43,44,50,51,58,59,60,61,],[8,8,-2,-5,-6,8,-3,-4,8,8,8,8,8,8,8,8,8,8,41,8,8,53,8,8,-8,8,-7,]),'NUMBER':([0,2,3,5,6,7,14,15,16,17,18,19,20,21,22,23,24,25,43,44,51,58,59,60,61,],[9,9,-2,-5,-6,9,-3,-4,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-8,9,-7,]),'INCREMENT':([0,2,3,5,6,7,14,15,16,17,18,19,20,21,22,23,24,25,43,44,51,53,58,59,60,61,],[10,10,-2,-5,-6,10,-3,-4,10,10,10,10,10,10,10,10,10,10,10,10,10,56,10,-8,10,-7,]),'STRING':([0,2,3,5,6,7,14,15,16,17,18,19,20,21,22,23,24,25,43,44,51,58,59,60,61,],[11,11,-2,-5,-6,11,-3,-4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-8,11,-7,]),'FOR':([0,2,3,5,6,14,15,58,59,60,61,],[12,12,-2,-5,-6,-3,-4,12,-8,12,-7,]),'SYSTEM':([0,2,3,5,6,14,15,58,59,60,61,],[13,13,-2,-5,-6,-3,-4,13,-8,13,-7,]),'$end':([1,2,3,5,6,14,15,59,61,],[0,-1,-2,-5,-6,-3,-4,-8,-7,]),'RIGHT_BRACE':([3,5,6,14,15,59,60,61,],[-2,-5,-6,-3,-4,-8,61,-7,]),'SEMICOLON':([4,8,9,10,11,29,30,31,32,33,34,35,36,37,38,39,40,46,47,48,57,],[15,-16,-17,-18,-19,-11,-12,-13,-14,-20,-21,-22,-23,-24,-25,-15,43,50,-10,-9,59,]),'PLUS':([4,8,9,10,11,26,29,30,31,32,33,34,35,36,37,38,39,47,48,54,],[16,-16,-17,-18,-19,16,16,16,16,16,16,16,16,16,16,16,-15,16,16,16,]),'MINUS':([4,8,9,10,11,26,29,30,31,32,33,34,35,36,37,38,39,47,48,54,],[17,-16,-17,-18,-19,17,17,17,17,17,17,17,17,17,17,17,-15,17,17,17,]),'TIMES':([4,8,9,10,11,26,29,30,31,32,33,34,35,36,37,38,39,47,48,54,],[18,-16,-17,-18,-19,18,18,18,18,18,18,18,18,18,18,18,-15,18,18,18,]),'DIVIDE':([4,8,9,10,11,26,29,30,31,32,33,34,35,36,37,38,39,47,48,54,],[19,-16,-17,-18,-19,19,19,19,19,19,19,19,19,19,19,19,-15,19,19,19,]),'LESS_THAN':([4,8,9,10,11,26,29,30,31,32,33,34,35,36,37,38,39,47,48,54,],[20,-16,-17,-18,-19,20,20,20,20,20,20,20,20,20,20,20,-15,20,20,20,]),'GREATER_THAN':([4,8,9,10,11,26,29,30,31,32,33,34,35,36,37,38,39,47,48,54,],[21,-16,-17,-18,-19,21,21,21,21,21,21,21,21,21,21,21,-15,21,21,21,]),'LESS_THAN_EQUAL':([4,8,9,10,11,26,29,30,31,32,33,34,35,36,37,38,39,47,48,54,],[22,-16,-17,-18,-19,22,22,22,22,22,22,22,22,22,22,22,-15,22,22,22,]),'GREATER_THAN_EQUAL':([4,8,9,10,11,26,29,30,31,32,33,34,35,36,37,38,39,47,48,54,],[23,-16,-17,-18,-19,23,23,23,23,23,23,23,23,23,23,23,-15,23,23,23,]),'EQUAL_EQUAL':([4,8,9,10,11,26,29,30,31,32,33,34,35,36,37,38,39,47,48,54,],[24,-16,-17,-18,-19,24,24,24,24,24,24,24,24,24,24,24,-15,24,24,24,]),'NOT_EQUAL':([4,8,9,10,11,26,29,30,31,32,33,34,35,36,37,38,39,47,48,54,],[25,-16,-17,-18,-19,25,25,25,25,25,25,25,25,25,25,25,-15,25,25,25,]),'RPAREN':([8,9,10,11,26,29,30,31,32,33,34,35,36,37,38,39,52,54,56,],[-16,-17,-18,-19,39,-11,-12,-13,-14,-20,-21,-22,-23,-24,-25,-15,55,57,-26,]),'DOT':([13,42,],[28,45,]),'OUT':([28,],[42,]),'EQUALS':([41,],[44,]),'PRINTLN':([45,],[49,]),'LEFT_BRACE':([55,],[58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,58,],[2,60,]),'statement':([0,2,58,60,],[3,14,3,14,]),'expression':([0,2,7,16,17,18,19,20,21,22,23,24,25,43,44,51,58,60,],[4,4,26,29,30,31,32,33,34,35,36,37,38,47,48,54,4,4,]),'for_loop':([0,2,58,60,],[5,5,5,5,]),'println_statement':([0,2,58,60,],[6,6,6,6,]),'assignment':([27,],[40,]),'condition':([43,],[46,]),'increment':([50,],[52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','analizador_Sintactico.py',6),
  ('statements -> statement','statements',1,'p_statements','analizador_Sintactico.py',12),
  ('statements -> statements statement','statements',2,'p_statements','analizador_Sintactico.py',13),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','analizador_Sintactico.py',18),
  ('statement -> for_loop','statement',1,'p_statement','analizador_Sintactico.py',19),
  ('statement -> println_statement','statement',1,'p_statement','analizador_Sintactico.py',20),
  ('for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LEFT_BRACE statements RIGHT_BRACE','for_loop',11,'p_for_loop','analizador_Sintactico.py',26),
  ('println_statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON','println_statement',9,'p_println_statement','analizador_Sintactico.py',32),
  ('assignment -> ID EQUALS expression','assignment',3,'p_assignment','analizador_Sintactico.py',38),
  ('condition -> expression','condition',1,'p_condition','analizador_Sintactico.py',44),
  ('expression -> expression PLUS expression','expression',3,'p_expression','analizador_Sintactico.py',50),
  ('expression -> expression MINUS expression','expression',3,'p_expression','analizador_Sintactico.py',51),
  ('expression -> expression TIMES expression','expression',3,'p_expression','analizador_Sintactico.py',52),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','analizador_Sintactico.py',53),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','analizador_Sintactico.py',54),
  ('expression -> ID','expression',1,'p_expression','analizador_Sintactico.py',55),
  ('expression -> NUMBER','expression',1,'p_expression','analizador_Sintactico.py',56),
  ('expression -> INCREMENT','expression',1,'p_expression','analizador_Sintactico.py',57),
  ('expression -> STRING','expression',1,'p_expression','analizador_Sintactico.py',58),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression','analizador_Sintactico.py',59),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression','analizador_Sintactico.py',60),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression','analizador_Sintactico.py',61),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression','analizador_Sintactico.py',62),
  ('expression -> expression EQUAL_EQUAL expression','expression',3,'p_expression','analizador_Sintactico.py',63),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression','analizador_Sintactico.py',64),
  ('increment -> ID INCREMENT','increment',2,'p_increment','analizador_Sintactico.py',70),
]
